#!/usr/bin/env ruby

ENV['BUNDLE_GEMFILE'] = File.expand_path('../../Gemfile', __FILE__)

require 'bundler/setup'
require 'github_archive'
require 'thor'

class Archive < Thor
  # exit(1) of failure
  def self.exit_on_faiure?
    true
  end

  class_option :path,
               default: './',
               desc: 'Path to write backups'

  class_option :token,
               desc: 'github token for authentication'

  Signal.trap('INT') do
    puts "\nInterrupted.\n"
    exit 1
  end unless binding.respond_to? :pry

  desc 'org-repos ORGANIZATION', "Archive an organization's repos"
  def org_repos(organization)
    puts "Backing up repositories for #{organization}..."
    client = GithubArchive::Auth.new(options[:token]).client
    gh = GithubArchive::Organization::Repos.new
    gh.archive(
      organization,
      options[:path],
      client
    )
    p gh.backup_count
  end
end

Archive.start(ARGV)
