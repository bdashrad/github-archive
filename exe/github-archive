#!/usr/bin/env ruby

ENV['BUNDLE_GEMFILE'] = File.expand_path('../../Gemfile', __FILE__)

require 'bundler/setup'
require 'github_archive'
require 'thor'

# CLI tool for archiving github
class Archive < Thor
  # exit(1) of failure
  def self.exit_on_faiure?
    true
  end

  class_option :path,
               default: './',
               desc: 'Path to write backups',
               aliases: ['-p']

  class_option :token,
               desc: 'github token for authentication',
               aliases: ['-t']

  class_option :verbose,
               type: :boolean,
               default: false,
               desc: 'Use verbose output',
               aliases: ['-v']

  Signal.trap('INT') do
    puts "\nInterrupted.\n"
    exit 1
  end unless binding.respond_to? :pry

  desc 'org-repos ORGANIZATION', "Archive an organization's repos"
  def org_repos(organization)
    puts "Backing up repositories for #{organization}..."
    client = GithubArchive::Auth.new(options[:token]).client
    gh = GithubArchive::Organization::Repos.new
    gh.archive(
      organization,
      options[:path],
      client,
      options[:verbose]
    )
    puts "Total repos backed up: #{gh.backup_count}"
    puts "Total size: #{gh.total_size}"
  end
end

Archive.start(ARGV)
